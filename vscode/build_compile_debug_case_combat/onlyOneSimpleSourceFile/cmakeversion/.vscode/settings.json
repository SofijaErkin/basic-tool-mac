{
    "files.defaultLanguage": "c++",
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.acceptSuggestionOnEnter": "off",
    "code-runner.runInTerminal": true,
    "code-runner.executorMap": {
        // Not Use Makefile
        //"c": "cd $dir && gcc -std=c11 -stdlib=libc++  $fileName  -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        //"cpp": "cd $dir && g++ -std=c++11 -stdlib=libc++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"
        // Use Makefile
        "c": "cd $dir && make && ./$fileNameWithoutExt && make clean",
        "cpp": "cd $dir && make && ./$fileNameWithoutExt && make clean"
        //
        // 1.single source file compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__helloworld.cpp
        // In-source build
        // "c/cpp": "cd $dir && cmake . && make && ./$fileNameWithoutExt && make clean"
        //
        // Using CMake — execute the cmake command and pass it the directory 
        // that contains the source code and the CMakeLists.txt file — in this
        // case “.” refers to the current directory:
        // cmake .
        // CMake identified the environment settings for the Linux/macOS/
        // windows device and created the Makefile for this project, which can
        // be viewed. Do not make edits to this Makefile, as any edits will be
        // overwritten the next time that the cmake utility is executed.
        // Once the Makefile has been created, the make command can be used to
        // build the project:
        // make
        // ./$fileNameWithoutExt
        // It works! 
        // may see:
        // Introduction to CMake by Example:
        // http://derekmolloy.ie/hello-world-introductions-to-cmake/
        //
        // 2.single source file build directory compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__helloworld.cpp
        // 
        // Directory build for target, CMakeCache.txt, CMakeFiles, Makefile,
        // cmake_install.cmake.
        // 
        // Out-source build
        // For this Architecture from 2 ~ 12, I wish to place all of the build 
        // files in the build directory, which is achieved very simply by 
        // calling the cmake program from within the build directory, as 
        // follows.
        // The build directory then contains the Makefile for the project, 
        // which correctly refers to the files in the src and include 
        // directories. The project can then be built from the build directory 
        // using the make command.
        // One nice feature of this approach is that all of the files related 
        // to the build process are within the build directory as illustrated 
        // by the tree utility output.
        // To clean this project you can simply recursively delete all files/
        // directories within the build directory. which is the same file 
        // system structure as was present before the cmake program was
        // executed.
        // Important: If you add new source files to your project it is very 
        // important that you call the cmake program again, otherwise the 
        // Makefiles will not be updated to account for any additions.
        // may see:
        // http://derekmolloy.ie/hello-world-introductions-to-cmake/
        // 
        // "c/cpp": "cd $dir/./build && cmake .. && make && ./$fileNameWithoutExt && make clean"
        // OR,
        // "c/cpp": "cd $dir/./build && cmake .. && make && ./$fileNameWithoutExt && cd .. && rm -r build/*"
        //
        // 3.single source file build directory include compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__inc
        //    |__helloworld.h
        // |__helloworld.cpp
        // 
        // Directory inc for include files.
        // Out-source build
        // cd $dir/./build && cmake .. && make && ./$fileNameWithoutExt && cd .. && rm -r build/*
        //
        // 4.source file build directory include compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__inc
        // |   |__helloworld.h
        // |__src
        //     |__helloworld.cpp
        //
        // Directory src for source files.
        // Out-source build
        // cd $dir/../build && cmake .. && make && ./$fileNameWithoutExt && cd .. && rm -r build/*
        //
        // 5. main source file build directory include compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__inc
        // |   |__helloworld.h
        // |__main.cpp
        // |__src
        //     |__helloworld.cpp
        //
        // main.cpp  for main function in top directory of the Project.
        // Out-source build
        // cd $dir/./build && cmake .. && make && ./$fileNameWithoutExt && cd .. && rm -r build/*
        // 
        // 6. main source file build directory include compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__inc
        // |   |__helloworld.h 
        // |__src
        //     |__helloworld.cpp
        //     |__main.cpp
        //
        // main.cpp  for main function under the src directory.
        // Out-source build
        // cd $dir/../build && cmake .. && make && ./$fileNameWithoutExt && cd .. && rm -r build/*
        //
        // 7. separated main source file build directory include compile 
        // command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__inc
        // |   |__helloworld.h
        // |__common
        //     |__main.cpp
        // |__src
        //     |__helloworld.cpp
        //
        // main.cpp  for main function under the common directory.
        // Out-source build
        // cd $dir/../build && cmake .. && make && ./$fileNameWithoutExt && cd .. && rm -r build/*
        //
        // 8. separated main source file build directory include link library 
        // compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__inc
        // |   |__helloworld.h
        // |__library_link
        //     |__library_link_.css
        // |__common
        //     |__main.cpp
        // |__src
        //     |__helloworld.cpp
        //
        // Directory  library_link: for the project to link library (e.g:
        // library_link_.css).
        // Out-source build
        // cd $dir/../build && cmake .. && make && ./$fileNameWithoutExt && cd .. && rm -r build/*
        //
        // 9. separated main source file build directory include link library 
        // test input compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__inc
        // |   |__helloworld.h
        // |__library_link
        //     |__library_link_.css
        // |__common
        //     |__main.cpp
        // |__src
        //     |__helloworld.cpp
        // |__test_input
        //     |__test_input_.txt
        //
        // Directory test_input: for the project to input file (e.g:
        // test_input_.txt or test_input_.md or others.
        // Out-source build
        // cd $dir/../build && cmake .. && make && ./$fileNameWithoutExt && cd .. && rm -r build/*
        // 
        // 10. multiple separated main source file build directory include link library 
        // test input compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__patch_taylor
        // |   |__CMakeLists.txt
        // |   |__helloworld_taylor.h
        // |   |__helloworld_taylor.cpp
        // |__patch_david
        // |   |__CMakeLists.txt
        // |   |__helloworld_david.h
        // |   |__helloworld_david.cpp
        // |__library_link
        // |   |__library_link_.css
        // |__main.cpp
        // |__test_input
        //     |__test_input_.txt
        //
        // Directory patch_taylor: for the taylor to patch;
        // Directory patch_david: for the taylor to patch.
        // Out-source build
        //
        //
        //
        // 11. multiple directroy separated main source file build directory include link library 
        // test input compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |   |__c_cpp_properties.json
        // |   |__launch.json
        // |   |__settings.json
        // |   |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__patch_taylor
        // |   |__CMakeLists.txt
        // |   |__inc_taylor
        // |   |  |__helloworld_taylor.h
        // |   |__src_taylor
        // |      |__helloworld_taylor.cpp
        // |__patch_david
        // |   |__CMakeLists.txt
        // |   |__inc_david
        // |   |  |__helloworld_david.h
        // |   |__src_david
        // |      |__helloworld_david.cpp
        // |__library_link
        // |   |__library_link_.css
        // |__main.cpp
        // |__test_input
        //     |__test_input_.txt
        //
        // Directory patch_taylor: for the taylor to patch dircetoy;
        // Directory patch_david: for the taylor to patch dircetoy.
        // Out-source build
        //
        //
        //
        // 12. multiple directroy separated main source file build directory include link library 
        // test input compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |   |__c_cpp_properties.json
        // |   |__launch.json
        // |   |__settings.json
        // |   |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__patch_taylor
        // |   |__CMakeLists.txt
        // |   |__inc_taylor
        // |   |  |__helloworld_taylor.h
        // |   |__library_link
        // |   |  |__library_link_taylor_.css
        // |   |__src_taylor
        // |      |__helloworld_taylor.cpp
        // |__patch_david
        // |   |__CMakeLists.txt
        // |   |__inc_david
        // |   |  |__helloworld_david.h
        // |   |__library_link
        // |   |  |__library_link_david_.css
        // |   |__src_david
        // |      |__helloworld_david.cpp
        // |__main.cpp
        // |__test_input
        //     |__test_input_.txt
        //
        // Directory patch_taylor: for the taylor to patch all dircetoy;
        // Directory patch_david: for the taylor to patch all dircetoy.
        // Out-source build
        //
        //
        //
    },
    "code-runner.saveFileBeforeRun": true,
    "code-runner.preserveFocus": false,
    "code-runner.clearPreviousOutput": false,
    "code-runner.ignoreSelection": true,
    // "C_Cpp.clang_format_sortIncludes": true,
    "editor.formatOnType": true,
    "clang.cxxflags": [
        "-std=c++11"
    ],
    "clang.cflags": [
        "-std=c11"
    ],
    "clang.completion.enable": true
}