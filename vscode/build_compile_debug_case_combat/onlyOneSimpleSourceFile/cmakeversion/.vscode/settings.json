{
    "files.defaultLanguage": "c++",
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.acceptSuggestionOnEnter": "off",
    "code-runner.runInTerminal": true,
    "code-runner.executorMap": {
        // Not Use Makefile
        //"c": "cd $dir && gcc -std=c11 -stdlib=libc++  $fileName  -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        //"cpp": "cd $dir && g++ -std=c++11 -stdlib=libc++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"
        // Use Makefile
        "c": "cd $dir && make && ./$fileNameWithoutExt && make clean",
        "cpp": "cd $dir && make && ./$fileNameWithoutExt && make clean"
        //
        // 1.single source file compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__helloworld.cpp
        // 
        // "c/cpp": "cd $dir && cmake . && make && ./$fileNameWithoutExt && make clean"
        // Using CMake — execute the cmake command and pass it the directory 
        // that contains the source code and the CMakeLists.txt file — in this
        // case “.” refers to the current directory:
        // cmake .
        // CMake identified the environment settings for the Linux/macOS/
        // windows device and created the Makefile for this project, which can
        // be viewed. Do not make edits to this Makefile, as any edits will be
        // overwritten the next time that the cmake utility is executed.
        // Once the Makefile has been created, the make command can be used to
        // build the project:
        // make
        // ./$fileNameWithoutExt
        // It works! 
        // may see:
        // Introduction to CMake by Example:
        // http://derekmolloy.ie/hello-world-introductions-to-cmake/
        //
        // 2.single source file build directory compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__helloworld.cpp
        // 
        // Directory build for target, CMakeCache.txt, CMakeFiles, Makefile,
        // cmake_install.cmake.
        //
        // 
        //
        // 4.source file build directory include compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__inc
        // |   |__helloworld.h
        // |__src
        //     |__helloworld.cpp
        //
        // Directory src for source files.
        //
        //
        // 
        // 5. main source file build directory include compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__inc
        // |   |__helloworld.h
        // |__main.cpp
        // |__src
        //     |__helloworld.cpp
        //
        // main.cpp  for main function in top directory of the Project.
        // 
        //
        // 
        // 6. main source file build directory include compile command below.
        // The Architecture of workspace HelloWorld are:
        // HelloWorld
        // |
        // |_.vscode
        // |     |__c_cpp_properties.json
        // |     |__launch.json
        // |     |__settings.json
        // |     |__tasks.json
        // |__CMakeLists.txt
        // |__build
        // |__inc
        // |   |__helloworld.h 
        // |__src
        //     |__helloworld.cpp
        //     |__main.cpp
        //
        // main.cpp  for main function under the src directory.
        //
        //
        //
    },
    "code-runner.saveFileBeforeRun": true,
    "code-runner.preserveFocus": false,
    "code-runner.clearPreviousOutput": false,
    "code-runner.ignoreSelection": true,
    // "C_Cpp.clang_format_sortIncludes": true,
    "editor.formatOnType": true,
    "clang.cxxflags": [
        "-std=c++11"
    ],
    "clang.cflags": [
        "-std=c11"
    ],
    "clang.completion.enable": true
}